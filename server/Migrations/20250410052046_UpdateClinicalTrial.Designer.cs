// <auto-generated />
using ClinicalTrialMatcher.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;

#nullable disable

namespace _.Migrations
{
    [DbContext(typeof(TrialsContext))]
    [Migration("20250410052046_UpdateClinicalTrial")]
    partial class UpdateClinicalTrial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClinicalTrialMatcher.Models.ClinicalTrial", b =>
                {
                    b.Property<string>("NctId")
                        .HasColumnType("text");

                    b.Property<string>("BriefSummary")
                        .HasColumnType("text");

                    b.Property<string>("BriefTitle")
                        .HasColumnType("text");

                    b.Property<string>("Conditions")
                        .HasColumnType("jsonb");

                    b.Property<string>("EligibilityCriteria")
                        .HasColumnType("text");

                    b.Property<string>("HealthyVolunteers")
                        .HasColumnType("text");

                    b.Property<string>("Keywords")
                        .HasColumnType("jsonb");

                    b.Property<string>("LastUpdatePostDate")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateSubmitDate")
                        .HasColumnType("text");

                    b.Property<int?>("MaxAgeInMonths")
                        .HasColumnType("integer")
                        .HasColumnName("max_age_months");

                    b.Property<string>("MaximumAge")
                        .HasColumnType("text");

                    b.Property<int?>("MinAgeInMonths")
                        .HasColumnType("integer")
                        .HasColumnName("min_age_months");

                    b.Property<string>("MinimumAge")
                        .HasColumnType("text");

                    b.Property<string>("OfficialTitle")
                        .HasColumnType("text");

                    b.Property<string>("OverallStatus")
                        .HasColumnType("text");

                    b.Property<string>("Phases")
                        .HasColumnType("jsonb");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("StartDate")
                        .HasColumnType("text");

                    b.Property<string>("StudyFirstPostDate")
                        .HasColumnType("text");

                    b.Property<string>("StudyFirstSubmitDate")
                        .HasColumnType("text");

                    b.Property<string>("StudyType")
                        .HasColumnType("text");

                    b.Property<Vector>("VectorizedData")
                        .HasColumnType("vector(1536)");

                    b.HasKey("NctId");

                    b.ToTable("ClinicalTrials");
                });

            modelBuilder.Entity("ClinicalTrialMatcher.Models.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClinicalTrialNctId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClinicalTrialNctId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("ClinicalTrialMatcher.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("ClinicalTrialNctId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Zip")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClinicalTrialNctId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ClinicalTrialMatcher.Models.Intervention", b =>
                {
                    b.HasOne("ClinicalTrialMatcher.Models.ClinicalTrial", "ClinicalTrial")
                        .WithMany("Interventions")
                        .HasForeignKey("ClinicalTrialNctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClinicalTrial");
                });

            modelBuilder.Entity("ClinicalTrialMatcher.Models.Location", b =>
                {
                    b.HasOne("ClinicalTrialMatcher.Models.ClinicalTrial", "ClinicalTrial")
                        .WithMany("Locations")
                        .HasForeignKey("ClinicalTrialNctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClinicalTrial");
                });

            modelBuilder.Entity("ClinicalTrialMatcher.Models.ClinicalTrial", b =>
                {
                    b.Navigation("Interventions");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
