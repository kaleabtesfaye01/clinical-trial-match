// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _.Data;

#nullable disable

namespace _.Migrations
{
    [DbContext(typeof(TrialsContext))]
    [Migration("20250407052606_UpdateInterventionAndLocationKeys2")]
    partial class UpdateInterventionAndLocationKeys2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("_.Models.ClinicalTrial", b =>
                {
                    b.Property<string>("NctId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BriefSummary")
                        .HasColumnType("TEXT");

                    b.Property<string>("BriefTitle")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Conditions")
                        .HasColumnType("TEXT");

                    b.Property<string>("EligibilityCriteria")
                        .HasColumnType("TEXT");

                    b.Property<string>("GenderBased")
                        .HasColumnType("TEXT");

                    b.Property<string>("GenderDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("HealthyVolunteers")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Keywords")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatePostDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdateSubmitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaximumAge")
                        .HasColumnType("TEXT");

                    b.Property<string>("MinimumAge")
                        .HasColumnType("TEXT");

                    b.Property<string>("OverallStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phases")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudyFirstPostDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudyFirstSubmitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudyType")
                        .HasColumnType("TEXT");

                    b.HasKey("NctId");

                    b.ToTable("ClinicalTrials");
                });

            modelBuilder.Entity("_.Models.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClinicalTrialNctId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClinicalTrialNctId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("_.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClinicalTrialNctId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClinicalTrialNctId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("_.Models.Intervention", b =>
                {
                    b.HasOne("_.Models.ClinicalTrial", null)
                        .WithMany("Interventions")
                        .HasForeignKey("ClinicalTrialNctId");
                });

            modelBuilder.Entity("_.Models.Location", b =>
                {
                    b.HasOne("_.Models.ClinicalTrial", null)
                        .WithMany("Locations")
                        .HasForeignKey("ClinicalTrialNctId");
                });

            modelBuilder.Entity("_.Models.ClinicalTrial", b =>
                {
                    b.Navigation("Interventions");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
